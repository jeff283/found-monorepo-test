# .github/workflows/deploy.yml
name: Deploy to Cloudflare Workers

on:
  # Trigger workflow on pushes to 'master' or 'staging'
  push:
    branches:
      - master
      - staging

  # Trigger workflow on Pull Requests targeting 'master' or 'staging'
  pull_request:
    types:
      - closed # Only interested when the PR is closed (merged)
    branches:
      - master
      - staging

jobs:
  # This single job handles building the project and deploying to the correct environment.
  build_and_deploy:
    runs-on: ubuntu-latest
    name: Build & Deploy

    # Add a concurrency group to prevent duplicate runs for the same branch
    # This is key to preventing duplicate runs when a PR is merged.
    concurrency:
      group: ${{ github.workflow }}-${{ github.ref }}
      cancel-in-progress: true

    # Wrangler env for Cloudflare Workers
    env:
      CLOUDFLARE_API_TOKEN: ${{ secrets.CLOUDFLARE_API_TOKEN }}
      CLOUDFLARE_ACCOUNT_ID: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
      NEXT_PUBLIC_API_URL: ${{ secrets.NEXT_PUBLIC_API_URL }}

    # Grant permissions for wrangler to comment on PRs with preview URLs
    permissions:
      contents: read
      pull-requests: write

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Set up Node.js v22
        uses: actions/setup-node@v4
        with:
          node-version: "22"
          cache: "npm" # Use the built-in caching for npm

      - name: Cache node modules and Next.js build
        uses: actions/cache@v4
        with:
          # Cache node modules and Next.js build artifacts.
          path: |
            ~/.npm
            ${{ github.workspace }}/.next/cache
          # Generate a new cache whenever packages or source files change.
          key: ${{ runner.os }}-nextjs-${{ hashFiles('**/package-lock.json') }}-${{ hashFiles('**/*.js', '**/*.jsx', '**/*.ts', '**/*.tsx') }}
          # If source files changed but packages didn't, rebuild from a prior cache.
          restore-keys: |
            ${{ runner.os }}-nextjs-${{ hashFiles('**/package-lock.json') }}-

      - name: Install Dependencies
        run: npm ci

      - name: Run linter
        run: npm run lint

      - name: Deploy to Production Environment (Master)
        # This step runs for direct pushes to 'master' OR when a PR is merged into 'master'.
        # The 'github.event.pull_request.merged == true' ensures it only runs if the PR was actually merged.
        # For a direct push, github.event_name will be 'push', and for a merged PR, it will be 'pull_request'.
        if: (github.event_name == 'push' && github.ref == 'refs/heads/master') || (github.event_name == 'pull_request' && github.event.pull_request.merged == true && github.base_ref == 'master')
        run: echo "ðŸš€ Deploying to PRODUCTION..." && npm run deploy-prod
        env:
          NEXT_PUBLIC_CLERK_PUBLISHABLE_KEY: ${{ secrets.NEXT_PUBLIC_CLERK_PUBLISHABLE_KEY }}
          CLERK_SECRET_KEY: ${{ secrets.CLERK_SECRET_KEY }}
          NEXT_PUBLIC_SUPABASE_URL: ${{ secrets.NEXT_PUBLIC_SUPABASE_URL_PROD }} # Use production URL for master
          SUPABASE_SERVICE_ROLE_KEY: ${{ secrets.SUPABASE_SERVICE_ROLE_KEY_PROD }} # Use production key for master
          DATABASE_URL: ${{ secrets.DATABASE_URL_PROD }} # Use production DB URL for master

      - name: Deploy to Staging Environment
        # This step runs for direct pushes to 'staging' OR when a PR is merged into 'staging'.
        if: (github.event_name == 'push' && github.ref == 'refs/heads/staging') || (github.event_name == 'pull_request' && github.event.pull_request.merged == true && github.base_ref == 'staging')
        run: echo "ðŸš€ Deploying to staging..." && npm run deploy-stage
        env:
          NEXT_PUBLIC_CLERK_PUBLISHABLE_KEY: ${{ secrets.NEXT_PUBLIC_CLERK_PUBLISHABLE_KEY }}
          CLERK_SECRET_KEY: ${{ secrets.CLERK_SECRET_KEY }}
          NEXT_PUBLIC_SUPABASE_URL: ${{ secrets.NEXT_PUBLIC_SUPABASE_URL_DEV }}
          SUPABASE_SERVICE_ROLE_KEY: ${{ secrets.SUPABASE_SERVICE_ROLE_KEY_DEV }}
          DATABASE_URL: ${{ secrets.DATABASE_URL_DEV }}
