# .github/workflows/deploy.yml
name: Deploy to Cloudflare Workers

on:
  # Trigger workflow on Pull Requests targeting the 'staging' branch
  pull_request:
    types:
      - closed
    # Only run if the PR is merged, not just opened or edited
    branches:
      - "master"
      - "staging"

  # # Trigger workflow on pushes to any branch
  # push:
  #   branches:
  #     - master
  #     - staging

jobs:
  # This single job handles building the project and deploying to the correct environment.
  build_and_deploy:
    runs-on: ubuntu-latest
    name: Build & Deploy

    # Wrangler env for Cloudflare Workers
    env:
      CLOUDFLARE_API_TOKEN: ${{ secrets.CLOUDFLARE_API_TOKEN }}
      CLOUDFLARE_ACCOUNT_ID: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}

    # Grant permissions for wrangler to comment on PRs with preview URLs
    permissions:
      contents: read
      pull-requests: write

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Set up Node.js v22
        uses: actions/setup-node@v4
        with:
          node-version: "22"
          cache: "npm" # Use the built-in caching for npm

      - name: Cache node modules and Next.js build
        uses: actions/cache@v4
        with:
          # Cache node modules and Next.js build artifacts.
          path: |
            ~/.npm
            ${{ github.workspace }}/.next/cache
          # Generate a new cache whenever packages or source files change.
          key: ${{ runner.os }}-nextjs-${{ hashFiles('**/package-lock.json') }}-${{ hashFiles('**/*.js', '**/*.jsx', '**/*.ts', '**/*.tsx') }}
          # If source files changed but packages didn't, rebuild from a prior cache.
          restore-keys: |
            ${{ runner.os }}-nextjs-${{ hashFiles('**/package-lock.json') }}-

      - name: Install Dependencies
        run: npm ci

      - name: Run linter
        run: npm run lint

      - name: Deploy to Production Environment
        # This step runs ONLY for pushes to the 'main' branch.
        # if: github.event_name == 'pull_request' && github.event.pull_request.merged == true && github.base_ref == 'master'
        run: echo "ðŸš€ Deploying to PRODUCTION..." && npm run deploy-prod
        env:
          NEXT_PUBLIC_CLERK_PUBLISHABLE_KEY: ${{ secrets.NEXT_PUBLIC_CLERK_PUBLISHABLE_KEY }}
          CLERK_SECRET_KEY: ${{ secrets.CLERK_SECRET_KEY }}

      - name: Deploy to Staging Environment
        # This step runs for pushes or PRs to the 'staging' branch.
        if: (github.ref_name == 'staging' || github.base_ref == 'staging') && github.event_name == 'pull_request' &&  github.event.pull_request.merged == true
        run: echo "ðŸš€ Deploying to staging..." && npm run deploy-stage
        env:
          NEXT_PUBLIC_CLERK_PUBLISHABLE_KEY: ${{ secrets.NEXT_PUBLIC_CLERK_PUBLISHABLE_KEY }}
          CLERK_SECRET_KEY: ${{ secrets.CLERK_SECRET_KEY }}
