name: Preview Deploy

on:
  pull_request:
    branches:
      - master
      - staging

  # push:
  #   branches:
  #     - master
  #     - staging

jobs:
  preview-deploy:
    name: Deploy Preview Environment
    runs-on: ubuntu-latest

    permissions:
      contents: read
      pull-requests: write

    env:
      CLOUDFLARE_API_TOKEN: ${{ secrets.CLOUDFLARE_API_TOKEN }}
      CLOUDFLARE_ACCOUNT_ID: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
      NEXT_PUBLIC_CLERK_PUBLISHABLE_KEY: ${{ secrets.NEXT_PUBLIC_CLERK_PUBLISHABLE_KEY_DEV }}
      CLERK_SECRET_KEY: ${{ secrets.CLERK_SECRET_KEY_DEV }}

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Set up Node.js v22
        uses: actions/setup-node@v4
        with:
          node-version: "22"
          cache: "npm"

      - name: Cache node modules and Next.js build
        uses: actions/cache@v4
        with:
          path: |
            ~/.npm
            ${{ github.workspace }}/.next/cache
          key: ${{ runner.os }}-nextjs-${{ hashFiles('**/package-lock.json') }}-${{ hashFiles('**/*.js', '**/*.jsx', '**/*.ts', '**/*.tsx') }}
          restore-keys: |
            ${{ runner.os }}-nextjs-${{ hashFiles('**/package-lock.json') }}-

      - name: Install Dependencies
        run: npm ci

      - name: Run linter
        run: npm run lint

      - name: Deploy to Preview Environment
        id: preview
        run: |
          echo "üöÄ Deploying to PREVIEW..."
          OUTPUT=$(npm run deploy-preview)
          echo "$OUTPUT"
          URL=$(echo "$OUTPUT" | grep -o 'https://[^ ]*\.workers\.dev' | head -n 1)
          echo "PREVIEW_URL=$URL" >> $GITHUB_OUTPUT

      - name: Comment on Pull Request with Preview URL
        if: steps.preview.outputs.PREVIEW_URL != ''
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const url = `${{ steps.preview.outputs.PREVIEW_URL }}`;
            const pr = context.payload.pull_request.number;
            github.rest.issues.createComment({
              issue_number: pr,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: `üîç Preview deployed: [${url}](${url})`
            });
