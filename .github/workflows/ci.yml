name: CI - Lint, Type Check & Build

on:
  push:
    branches: [master, main, staging]
  pull_request:
    branches: [master, main, staging]

  # Allow manual triggering from GitHub UI
  workflow_dispatch:

jobs:
  lint-and-build:
    name: Lint, Type Check & Build
    runs-on: ubuntu-latest

    # Add concurrency to prevent multiple CI runs
    concurrency:
      group: ci-${{ github.ref }}-${{ github.event_name }}
      cancel-in-progress: true

    env:
      # Clerk environment variables (dev keys for CI)
      CLERK_SECRET_KEY: ${{ secrets.CLERK_SECRET_KEY_DEV }}
      NEXT_PUBLIC_CLERK_PUBLISHABLE_KEY: ${{ secrets.NEXT_PUBLIC_CLERK_PUBLISHABLE_KEY_DEV }}
      CLERK_PUBLISHABLE_KEY: ${{ secrets.NEXT_PUBLIC_CLERK_PUBLISHABLE_KEY_DEV }}

      # Supabase (dev environment for CI)
      NEXT_PUBLIC_SUPABASE_URL: ${{ secrets.NEXT_PUBLIC_SUPABASE_URL_DEV }}
      NEXT_PUBLIC_SUPABASE_ANON_KEY: ${{ secrets.NEXT_PUBLIC_SUPABASE_ANON_KEY_DEV }}
      DATABASE_URL: ${{ secrets.DATABASE_URL_DEV }}

      # API URL for CI
      NEXT_PUBLIC_API_URL: ${{ secrets.NEXT_PUBLIC_API_URL_DEV }}

      # Website-specific for CI builds
      MAILERLITE_API_KEY: ${{ secrets.MAILERLITE_API_KEY }}
      NEXT_PUBLIC_TURNSTILE_SITE_KEY: ${{ secrets.NEXT_PUBLIC_TURNSTILE_SITE_KEY }}
      TURNSTILE_SECRET_KEY: ${{ secrets.TURNSTILE_SECRET_KEY }}
      NEXT_PUBLIC_BASE_URL: ${{ secrets.NEXT_PUBLIC_BASE_URL }}

      # Turbo environment variables
      TURBO_TOKEN: ${{ secrets.TURBO_TOKEN }}
      TURBO_TEAM: ${{ vars.TURBO_TEAM }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 2

      - name: Install pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 10.14.0

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 22
          cache: "pnpm"

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Run build (packages only)
        run: pnpm run build --filter="./packages/*"

      - name: Run cf-typegen
        run: pnpm run cf-typegen

      - name: Run lint
        run: pnpm run lint

      - name: Run type checking
        run: pnpm run check-types

      - name: Build Apps (standard build script )
        run: pnpm run build

      - name: Build OpenNext (for cloudlfare deployment compatibility)
        run: pnpm run build:opennext || echo "‚ö†Ô∏è  build:opennext script not found, skipping..."

      - name: CI Summary
        run: |
          echo "‚úÖ CI completed successfully"
          echo "üì¶ Packages built and linted"
          echo "üîç Type checking passed"
          echo "üèóÔ∏è  Standard and OpenNext builds validated"
